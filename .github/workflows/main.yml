name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1 # checkout latest commit
    - name: Use Node.js ${{ matrix.node-version }} # set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies # runs the npm ci command to install all dependencies
      run: npm ci
      env:
        CI: "true"
    - name: Lint Script # lints the code to find any errors
      run: npm run lint
      env:
        CI: "true"
    - name: Build Aisha # build code
      run: npm run build
      env:
        CI: "true"
    - name: Discord success notification # sends a Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'âœ… **Aisha CI** (triggered by `{{GITHUB_ACTOR}}` on `{{GITHUB_REF}}`) was successful (see https://github.com/RifqiSah/Aisha/commit/{{GITHUB_SHA}}/checks)'
    - name: Discord failure notification # sends a Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'ðŸš« **Aisha CI** (triggered by `{{GITHUB_ACTOR}}` on `{{GITHUB_REF}}`) has failed (see https://github.com/RifqiSah/Aisha/commit/{{GITHUB_SHA}}/checks)'
      if: failure()

  docker-build:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push images
        id: docker_build
        uses: docker/build-push-action@v2.4.0
        with:
          push: true
          tags: rifqisah/aisha:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: [build, docker-build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT}}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker stop aisha
            docker pull rifqisah/aisha:latest
            docker run --rm --env-file ./config/aisha/.env --name=aisha rifqisah/aisha:latest